<UserControl
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:rogueMetroFireUi="clr-namespace:Rogue.MetroFire.UI" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
			 xmlns:behaviors="clr-namespace:Rogue.MetroFire.UI.Behaviors"
			 xmlns:infrastructure="clr-namespace:Rogue.MetroFire.UI.Infrastructure"
			 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" x:Class="Rogue.MetroFire.UI.Views.LoginView" 
			 mc:Ignorable="d" 
			infrastructure:DesignTime.Background="White"
			 d:DesignHeight="458" Width="613">
	<Grid x:Name="Root">
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="VisualStateGroup">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0:0:0.3">
						<ei:ExtendedVisualStateManager.TransitionEffect>
							<ee:RadialBlurTransitionEffect/>
						</ei:ExtendedVisualStateManager.TransitionEffect>
					</VisualTransition>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="LoggingInState">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Grid">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ProgressIndicator">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TextBlock">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="NormalState"/>
			</VisualStateGroup>
			<VisualStateGroup x:Name="AccountNameVerifiedGroup">
				<VisualState x:Name="AccountNameVerified">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderVerified">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="AccountNameNotVerified"/>
			</VisualStateGroup>
			<VisualStateGroup x:Name="AccountNameErrorGroup">
				<VisualState x:Name="AccountNameNoError"/>
				<VisualState x:Name="AccountNameError">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderError">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="AccountNameVerifyingGroup">
				<VisualState x:Name="NotVerifyingAccountName"/>
				<VisualState x:Name="VerifyingAccountName">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerifyAccountProgressIndicator">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="LoginErrorGroup">
				<VisualState x:Name="NoLoginError"/>
				<VisualState x:Name="LoginError">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderLoginError">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
		<VisualStateManager.CustomVisualStateManager>
			<ei:ExtendedVisualStateManager/>
		</VisualStateManager.CustomVisualStateManager>
		
		<i:Interaction.Behaviors>
			<behaviors:VisualStateBehavior>
				<behaviors:Transition Source="{Binding IsLoggingIn}" Value="False" VisualState="NormalState"/>
				<behaviors:Transition Source="{Binding IsLoggingIn}" Value="True" VisualState="LoggingInState"/>
				<behaviors:Transition Source="{Binding IsAccountNameVerified}" Value="True" VisualState="AccountNameVerified"/>
				<behaviors:Transition Source="{Binding IsAccountNameVerified}" Value="False" VisualState="AccountNameNotVerified"/>
				<behaviors:Transition Source="{Binding IsAccountNameInError}" Value="False" VisualState="AccountNameNoError"/>
				<behaviors:Transition Source="{Binding IsAccountNameInError}" Value="True" VisualState="AccountNameError"/>
				<behaviors:Transition Source="{Binding IsVerifyingAccountInProgress}" Value="False" VisualState="NotVerifyingAccountName"/>
				<behaviors:Transition Source="{Binding IsVerifyingAccountInProgress}" Value="True" VisualState="VerifyingAccountName"/>
				<behaviors:Transition Source="{Binding IsTokenInError}" Value="False" VisualState="NoLoginError"/>
				<behaviors:Transition Source="{Binding IsTokenInError}" Value="True" VisualState="LoginError"/>
			</behaviors:VisualStateBehavior>
		</i:Interaction.Behaviors>
		
		
		<Grid x:Name="Grid" HorizontalAlignment="Center" Height="300" VerticalAlignment="Center" Width="510">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.6*"/>
				<ColumnDefinition Width="0.6*"/>
				<ColumnDefinition Width="40"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="0.126*"/>
				<RowDefinition Height="0.159*"/>
				<RowDefinition Height="0.243*"/>
				<RowDefinition Height="0.192*"/>
				<RowDefinition Height="0.28*"/>
			</Grid.RowDefinitions>
			<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Top" FontWeight="SemiBold" Style="{DynamicResource SmallMetroHeading}" d:LayoutOverrides="GridBox" Grid.ColumnSpan="2"><Run Language="nb-no" Text="Provide login info"/></TextBlock>
			<TextBlock TextWrapping="Wrap" Grid.Row="1" FontWeight="Light" Height="50.22" Width="221.377" Style="{DynamicResource MetroLargeLightHeader}" Margin="4,8.924" VerticalAlignment="Center"><Run Language="nb-no" Text="Account name"/><LineBreak/><Run Language="nb-no"/></TextBlock>
			<TextBlock TextWrapping="Wrap" Grid.Row="2" FontWeight="Light" Height="50.22" Width="221.377" Style="{DynamicResource MetroLargeLightHeader}" Margin="4,8.924" VerticalAlignment="Center"><Run Language="nb-no" Text="Token"/><LineBreak/><Run Language="nb-no"/></TextBlock>
			<TextBox x:Name="TextBox" TextWrapping="Wrap" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" Style="{DynamicResource LargeTextBoxStyle}" d:LayoutOverrides="Width" Text="{Binding Account, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
			<TextBox TextWrapping="Wrap" VerticalAlignment="Center" Grid.Column="1" Grid.Row="2" Style="{DynamicResource LargeTextBoxStyle}" d:LayoutOverrides="Width" Text="{Binding Token, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
			<Button Content="_Login" Grid.Row="3" Grid.ColumnSpan="2" Style="{DynamicResource MetroBigButton}" VerticalAlignment="Center" Command="{Binding LoginCommand}"/>
			<Border x:Name="BorderVerified" BorderThickness="1" Margin="3" Grid.Column="3" Background="{DynamicResource jean_victor_balin_green_tick}" Grid.Row="1" Visibility="Hidden" ToolTip="The account name exists."/>
			<Border x:Name="BorderError" BorderThickness="1" Margin="3" Grid.Column="2" Background="{DynamicResource molumen_red_round_error_warning_icon}" Grid.Row="1" Visibility="Hidden" d:LayoutOverrides="GridBox" ToolTip="The account name is invalid."/>
			<rogueMetroFireUi:ProgressIndicator x:Name="VerifyAccountProgressIndicator" Margin="4" d:LayoutOverrides="Width, Height" Grid.Row="1" Grid.Column="2" Visibility="Hidden"/>
			<StackPanel Grid.Row="4" Grid.ColumnSpan="4" Visibility="{Binding ShowConnectionError, Converter={StaticResource BoolToVisibilityConverter}}">
				<TextBlock TextWrapping="Wrap" Style="{DynamicResource SmallMetroHeading}" Foreground="{DynamicResource RedErrorMessage}">
					Unable to connect to Campfire. Verify your <Hyperlink Command="{Binding ProxySettingsCommand}">proxy settings</Hyperlink> and/or <Hyperlink Command="{Binding RetryCommand}">try again.</Hyperlink>
				</TextBlock>
				<TextBlock TextWrapping="Wrap" Text="{Binding ConnectionErrorMessage}" Style="{DynamicResource MetroBodyText}" Foreground="{DynamicResource RedErrorMessage}"/>
			</StackPanel>
			<Border x:Name="BorderLoginError" BorderThickness="1" Margin="3" Grid.Column="2" Background="{DynamicResource molumen_red_round_error_warning_icon}" Grid.Row="2" Visibility="Hidden" ToolTip="The token is invalid or the user is not authorized to access this account."/>
		</Grid>
		<rogueMetroFireUi:ProgressIndicator x:Name="ProgressIndicator" Visibility="Hidden" Width="100" Height="100"
											  VerticalAlignment="Center" HorizontalAlignment="Center"/>
		<TextBlock x:Name="TextBlock" HorizontalAlignment="Center" TextWrapping="Wrap" Text="Logging in" VerticalAlignment="Center" FontSize="34.667" FontWeight="Light" Visibility="Hidden"/>
	</Grid>
</UserControl>
