<UserControl x:Class="Rogue.MetroFire.UI.Views.MainCampfireView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ui="clr-namespace:Rogue.MetroFire.UI"
             xmlns:controls="clr-namespace:Transitionals.Controls;assembly=Transitionals"
             xmlns:transitions="clr-namespace:Rogue.MetroFire.UI.Transitions"
             mc:Ignorable="d"
			 d:DesignHeight="514" d:DesignWidth="661" 
			 >
	<UserControl.Resources>
		<SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
		<Style x:Key="MainViewTabControlStyle" TargetType="{x:Type TabControl}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Padding" Value="4,4,4,4"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="#F9F9F9"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="ColumnDefinition0"/>
								<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
								<RowDefinition x:Name="RowDefinition1" Height="*"/>
							</Grid.RowDefinitions>
							<TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
							<Border x:Name="ContentPanel" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
								<!--<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->

								<controls:TransitionElement Content="{TemplateBinding SelectedContent}" Grid.Row="1" Grid.Column="0"
															Loaded="TransitionElementOnLoaded">
									<controls:TransitionElement.NullContentTemplate>
										<DataTemplate>
											<Grid></Grid>
										</DataTemplate>
									</controls:TransitionElement.NullContentTemplate>
									<controls:TransitionElement.TransitionSelector>
										<transitions:HorizontalSlideTransitionSelector 
											Collection="{TemplateBinding ItemsSource}"></transitions:HorizontalSlideTransitionSelector>
									</controls:TransitionElement.TransitionSelector>
								</controls:TransitionElement>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>							
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<DataTemplate x:Key="TabItemDataTemplate" DataType="ui:IModule">

			<Grid x:Name="grid" Margin="0" RenderTransformOrigin="0.5,0.5">
				<Grid.RenderTransform>
					<TransformGroup>
						<ScaleTransform/>
						<SkewTransform/>
						<RotateTransform/>
						<TranslateTransform/>
					</TransformGroup>
				</Grid.RenderTransform>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="0.828*"/>
					<ColumnDefinition Width="12.2"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="10"/>
					<RowDefinition Height="19.185"/>
				</Grid.RowDefinitions>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal"/>
						<VisualState x:Name="MouseOver"/>
						<VisualState x:Name="Pressed">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
									<EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
									<EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Disabled"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<TextBlock TextWrapping="NoWrap" Style="{DynamicResource MetroMediumLightHeader}" 
    								VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="_textBlock" Grid.RowSpan="2" Grid.ColumnSpan="1" Text="{Binding Caption}"/>
				<TextBlock x:Name="textBlock" Margin="-2,0,0,-3" TextWrapping="Wrap" Text="{Binding Notifications}" d:LayoutOverrides="Width, Height" Grid.Column="2" FontSize="12" VerticalAlignment="Bottom" HorizontalAlignment="Left">
    								<TextBlock.Foreground>
    									<SolidColorBrush Color="{DynamicResource MetroBlue}"/>
    								</TextBlock.Foreground>
				</TextBlock>
				<Grid x:Name="grid1" Grid.ColumnSpan="1" Grid.Column="1" Visibility="{Binding Closable, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" Margin="0,0,0,-3" HorizontalAlignment="Left" VerticalAlignment="Bottom">
					<Button x:Name="button" Content="Button" Margin="0" d:LayoutOverrides="Height" Template="{DynamicResource CloseButtonTemplate}" Visibility="Hidden"
    									Command="{x:Static ui:GlobalCommands.LeaveRoomCommand}" CommandParameter="{Binding Id}">
						<Button.LayoutTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Button.LayoutTransform>
					</Button>
				</Grid>
			</Grid>
			<DataTemplate.Triggers>
				<Trigger Property="IsMouseOver" Value="True" SourceName="grid">
					<Setter Property="Visibility" TargetName="button" Value="Visible"/>
					<Setter Property="Visibility" TargetName="textBlock" Value="Hidden"/>
				</Trigger>
				<Trigger Property="IsKeyboardFocused" Value="true"/>
				<Trigger Property="ToggleButton.IsChecked" Value="true"/>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Foreground" Value="#ADADAD" TargetName="_textBlock"/>
				</Trigger>
				<DataTrigger Binding="{Binding IsActive}" Value="false">
					<Setter Property="Foreground" Value="Gray" TargetName="_textBlock"/>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>
		<Style x:Key="TabItemFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="TabItemContainerStyle" TargetType="{x:Type TabItem}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="Padding" Value="6,1,6,1"/>
			<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid SnapsToDevicePixels="true">
							<ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>							
						</Grid>
						<ControlTemplate.Triggers>						
						
							<!--<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Top"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-2,-1"/>
								<Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
							</MultiTrigger>-->
						
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
	</UserControl.Resources>
	
	<TabControl d:DataContext="{Binding Source={StaticResource SampleMainViewModel}}" 
				ItemsSource="{Binding Modules}" Style="{DynamicResource MainViewTabControlStyle}" 
				ItemTemplate="{DynamicResource TabItemDataTemplate}" 
				SelectedItem="{Binding ActiveModule}"
				ItemContainerStyle="{DynamicResource TabItemContainerStyle}">
		
	</TabControl>
</UserControl>
